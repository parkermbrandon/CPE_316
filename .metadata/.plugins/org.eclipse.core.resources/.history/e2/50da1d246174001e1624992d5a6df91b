#include "main.h"

// Function to initialize LPUART1
void LPUART1_init() {
    // Set IOSV bit for PG[15:2]
    PWR->CR2 |= PWR_CR2_IOSV;

    // Enable LPUART1 clock
    RCC->APB1ENR2 |= RCC_APB1ENR2_LPUART1EN;

    // Enable GPIOG clock
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOGEN;

    // Configure PG7 as LPUART1_TX and PG8 as LPUART1_RX
    GPIOG->MODER &= ~(GPIO_MODER_MODE7 | GPIO_MODER_MODE8);
    GPIOG->MODER |= (GPIO_MODER_MODE7_1 | GPIO_MODER_MODE8_1);

    // Set Alternate Function for PG7 (LPUART1_TX)
    GPIOG->AFR[0] |= (8U << GPIO_AFRL_AFSEL7_Pos);

    // Set Alternate Function for PG8 (LPUART1_RX)
    GPIOG->AFR[1] |= (8U << GPIO_AFRH_AFSEL8_Pos);

    // Set Baud Rate Divisor
    LPUART1->BRR = 34;

    // Enable LPUART, Transmitter and Receiver
    LPUART1->CR1 |= (USART_CR1_UE | USART_CR1_TE | USART_CR1_RE);
}

// Function to print a string via LPUART1
void UART_print(char *str) {
    while (*str) {
        // Write data to TDR
        LPUART1->TDR = *str;

        // Wait for Transmission Complete
        while (!(LPUART1->ISR & USART_ISR_TC));

        str++;
    }
}

int main() {
    // Initialize LPUART1
    LPUART1_init();

    // Main loop
    while (1) {
        // Print 'A' via LPUART1
        UART_print("A\n");

        // Delay for 1 second
        HAL_Delay(1000);
    }
}
