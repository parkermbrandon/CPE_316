#include "main.h"

void TIM2_IRQHandler(void);

int main(void)
{
    // Enable clock for GPIOA and TIM2
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOAEN;
    RCC->APB1ENR1 |= RCC_APB1ENR1_TIM2EN;

    // Configure PA0 as output (TIM2_CH1)
    GPIOA->MODER &= ~GPIO_MODER_MODE0;
    GPIOA->MODER |= GPIO_MODER_MODE0_0;

    // Set up TIM2
    TIM2->PSC = 0;  // Prescaler = 1
    TIM2->ARR = 799;  // 4 MHz / 800 = 5 kHz
    TIM2->CCR1 = 400;  // 25% duty cycle: 200 / 800 = 0.25
    TIM2->DIER |= TIM_DIER_CC1IE;  // Enable the CC1 interrupt
    TIM2->CR1 |= TIM_CR1_CEN;  // Enable the counter

    // Enable TIM2 interrupt
    NVIC_EnableIRQ(TIM2_IRQn);

    while (1)
    {
        // Your main loop code here
    	//GPIOA->ODR |= GPIO_PIN_0;
    	HAL_Delay(1000);

    }
}

void TIM2_IRQHandler(void)
{
    if (TIM2->SR & TIM_SR_CC1IF)
    {
        // Toggle PA0
        GPIOA->ODR ^= GPIO_ODR_OD0;

        // Clear the interrupt flag
        TIM2->SR &= ~TIM_SR_CC1IF;
    }
}
