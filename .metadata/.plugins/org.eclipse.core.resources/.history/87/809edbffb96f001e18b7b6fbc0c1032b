#include "ExternalDAC.h"

extern const uint16_t sine_wave[600] = {
    1862, 1881, 1900, 1920, 1939, 1959, 1978, 1998, 2017, 2037, 2056, 2075, 2095, 2114, 2133, 2153,
    2172, 2191, 2210, 2229, 2249, 2268, 2287, 2306, 2324, 2343, 2362, 2381, 2400, 2418, 2437, 2455,
    2474, 2492, 2510, 2529, 2547, 2565, 2583, 2601, 2619, 2636, 2654, 2672, 2689, 2707, 2724, 2741,
    2758, 2775, 2792, 2809, 2826, 2842, 2859, 2875, 2892, 2908, 2924, 2940, 2956, 2971, 2987, 3002,
    3018, 3033, 3048, 3063, 3078, 3093, 3107, 3122, 3136, 3150, 3164, 3178, 3191, 3205, 3218, 3232,
    3245, 3258, 3271, 3283, 3296, 3308, 3320, 3332, 3344, 3356, 3367, 3379, 3390, 3401, 3412, 3423,
    3433, 3444, 3454, 3464, 3474, 3483, 3493, 3502, 3511, 3520, 3529, 3537, 3546, 3554, 3562, 3570,
    3578, 3585, 3592, 3599, 3606, 3613, 3619, 3626, 3632, 3638, 3644, 3649, 3654, 3660, 3665, 3669,
    3674, 3678, 3682, 3686, 3690, 3694, 3697, 3700, 3703, 3706, 3708, 3711, 3713, 3715, 3716, 3718,
    3719, 3720, 3721, 3722, 3723, 3723, 3723, 3723, 3723, 3722, 3721, 3720, 3719, 3718, 3716, 3715,
    3713, 3711, 3708, 3706, 3703, 3700, 3697, 3694, 3690, 3686, 3682, 3678, 3674, 3669, 3665, 3660,
    3654, 3649, 3644, 3638, 3632, 3626, 3619, 3613, 3606, 3599, 3592, 3585, 3578, 3570, 3562, 3554,
    3546, 3537, 3529, 3520, 3511, 3502, 3493, 3483, 3474, 3464, 3454, 3444, 3433, 3423, 3412, 3401,
    3390, 3379, 3367, 3356, 3344, 3332, 3320, 3308, 3296, 3283, 3271, 3258, 3245, 3232, 3218, 3205,
    3191, 3178, 3164, 3150, 3136, 3122, 3107, 3093, 3078, 3063, 3048, 3033, 3018, 3002, 2987, 2971,
    2956, 2940, 2924, 2908, 2892, 2875, 2859, 2842, 2826, 2809, 2792, 2775, 2758, 2741, 2724, 2707,
    2689, 2672, 2654, 2636, 2619, 2601, 2583, 2565, 2547, 2529, 2510, 2492, 2474, 2455, 2437, 2418,
    2400, 2381, 2362, 2343, 2324, 2306, 2287, 2268, 2249, 2229, 2210, 2191, 2172, 2153, 2133, 2114,
    2095, 2075, 2056, 2037, 2017, 1998, 1978, 1959, 1939, 1920, 1900, 1881, 1862, 1842, 1823, 1803,
    1784, 1764, 1745, 1725, 1706, 1686, 1667, 1648, 1628, 1609, 1590, 1570, 1551, 1532, 1513, 1494,
    1474, 1455, 1436, 1417, 1399, 1380, 1361, 1342, 1323, 1305, 1286, 1268, 1249, 1231, 1213, 1194,
    1176, 1158, 1140, 1122, 1104, 1087, 1069, 1051, 1034, 1016, 999, 982, 965, 948, 931, 914,
    897, 881, 864, 848, 831, 815, 799, 783, 767, 752, 736, 721, 705, 690, 675, 660,
    645, 630, 616, 601, 587, 573, 559, 545, 532, 518, 505, 491, 478, 465, 452, 440,
    427, 415, 403, 391, 379, 367, 356, 344, 333, 322, 311, 300, 290, 279, 269, 259,
    249, 240, 230, 221, 212, 203, 194, 186, 177, 169, 161, 153, 145, 138, 131, 124,
    117, 110, 104, 97, 91, 85, 79, 74, 69, 63, 58, 54, 49, 45, 41, 37,
    33, 29, 26, 23, 20, 17, 15, 12, 10, 8, 7, 5, 4, 3, 2, 1,
    0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 15, 17,
    20, 23, 26, 29, 33, 37, 41, 45, 49, 54, 58, 63, 69, 74, 79, 85,
    91, 97, 104, 110, 117, 124, 131, 138, 145, 153, 161, 169, 177, 186, 194, 203,
    212, 221, 230, 240, 249, 259, 269, 279, 290, 300, 311, 322, 333, 344, 356, 367,
    379, 391, 403, 415, 427, 440, 452, 465, 478, 491, 505, 518, 532, 545, 559, 573,
    587, 601, 616, 630, 645, 660, 675, 690, 705, 721, 736, 752, 767, 783, 799, 815,
    831, 848, 864, 881, 897, 914, 931, 948, 965, 982, 999, 1016, 1034, 1051, 1069, 1087,
    1104, 1122, 1140, 1158, 1176, 1194, 1213, 1231, 1249, 1268, 1286, 1305, 1323, 1342, 1361, 1380,
    1399, 1417, 1436, 1455, 1474, 1494, 1513, 1532, 1551, 1570, 1590, 1609, 1628, 1648, 1667, 1686,
    1706, 1725, 1745, 1764, 1784, 1803, 1823, 1842,
};
extern const uint16_t square_wave[600] = {
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723,
    3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 3723, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0,
};
extern const uint16_t sawtooth_wave[600] = {
    0, 6, 12, 19, 25, 31, 37, 43, 50, 56, 62, 68, 74, 81, 87, 93,
    99, 105, 112, 118, 124, 130, 137, 143, 149, 155, 161, 168, 174, 180, 186, 192,
    199, 205, 211, 217, 223, 230, 236, 242, 248, 254, 261, 267, 273, 279, 285, 292,
    298, 304, 310, 316, 323, 329, 335, 341, 347, 354, 360, 366, 372, 379, 385, 391,
    397, 403, 410, 416, 422, 428, 434, 441, 447, 453, 459, 465, 472, 478, 484, 490,
    496, 503, 509, 515, 521, 527, 534, 540, 546, 552, 558, 565, 571, 577, 583, 589,
    596, 602, 608, 614, 621, 627, 633, 639, 645, 652, 658, 664, 670, 676, 683, 689,
    695, 701, 707, 714, 720, 726, 732, 738, 745, 751, 757, 763, 769, 776, 782, 788,
    794, 800, 807, 813, 819, 825, 831, 838, 844, 850, 856, 862, 869, 875, 881, 887,
    894, 900, 906, 912, 918, 925, 931, 937, 943, 949, 956, 962, 968, 974, 980, 987,
    993, 999, 1005, 1011, 1018, 1024, 1030, 1036, 1042, 1049, 1055, 1061, 1067, 1073, 1080, 1086,
    1092, 1098, 1104, 1111, 1117, 1123, 1129, 1136, 1142, 1148, 1154, 1160, 1167, 1173, 1179, 1185,
    1191, 1198, 1204, 1210, 1216, 1222, 1229, 1235, 1241, 1247, 1253, 1260, 1266, 1272, 1278, 1284,
    1291, 1297, 1303, 1309, 1315, 1322, 1328, 1334, 1340, 1346, 1353, 1359, 1365, 1371, 1378, 1384,
    1390, 1396, 1402, 1409, 1415, 1421, 1427, 1433, 1440, 1446, 1452, 1458, 1464, 1471, 1477, 1483,
    1489, 1495, 1502, 1508, 1514, 1520, 1526, 1533, 1539, 1545, 1551, 1557, 1564, 1570, 1576, 1582,
    1588, 1595, 1601, 1607, 1613, 1620, 1626, 1632, 1638, 1644, 1651, 1657, 1663, 1669, 1675, 1682,
    1688, 1694, 1700, 1706, 1713, 1719, 1725, 1731, 1737, 1744, 1750, 1756, 1762, 1768, 1775, 1781,
    1787, 1793, 1799, 1806, 1812, 1818, 1824, 1830, 1837, 1843, 1849, 1855, 1861, 1868, 1874, 1880,
    1886, 1893, 1899, 1905, 1911, 1917, 1924, 1930, 1936, 1942, 1948, 1955, 1961, 1967, 1973, 1979,
    1986, 1992, 1998, 2004, 2010, 2017, 2023, 2029, 2035, 2041, 2048, 2054, 2060, 2066, 2072, 2079,
    2085, 2091, 2097, 2103, 2110, 2116, 2122, 2128, 2135, 2141, 2147, 2153, 2159, 2166, 2172, 2178,
    2184, 2190, 2197, 2203, 2209, 2215, 2221, 2228, 2234, 2240, 2246, 2252, 2259, 2265, 2271, 2277,
    2283, 2290, 2296, 2302, 2308, 2314, 2321, 2327, 2333, 2339, 2345, 2352, 2358, 2364, 2370, 2377,
    2383, 2389, 2395, 2401, 2408, 2414, 2420, 2426, 2432, 2439, 2445, 2451, 2457, 2463, 2470, 2476,
    2482, 2488, 2494, 2501, 2507, 2513, 2519, 2525, 2532, 2538, 2544, 2550, 2556, 2563, 2569, 2575,
    2581, 2587, 2594, 2600, 2606, 2612, 2619, 2625, 2631, 2637, 2643, 2650, 2656, 2662, 2668, 2674,
    2681, 2687, 2693, 2699, 2705, 2712, 2718, 2724, 2730, 2736, 2743, 2749, 2755, 2761, 2767, 2774,
    2780, 2786, 2792, 2798, 2805, 2811, 2817, 2823, 2829, 2836, 2842, 2848, 2854, 2861, 2867, 2873,
    2879, 2885, 2892, 2898, 2904, 2910, 2916, 2923, 2929, 2935, 2941, 2947, 2954, 2960, 2966, 2972,
    2978, 2985, 2991, 2997, 3003, 3009, 3016, 3022, 3028, 3034, 3040, 3047, 3053, 3059, 3065, 3071,
    3078, 3084, 3090, 3096, 3102, 3109, 3115, 3121, 3127, 3134, 3140, 3146, 3152, 3158, 3165, 3171,
    3177, 3183, 3189, 3196, 3202, 3208, 3214, 3220, 3227, 3233, 3239, 3245, 3251, 3258, 3264, 3270,
    3276, 3282, 3289, 3295, 3301, 3307, 3313, 3320, 3326, 3332, 3338, 3344, 3351, 3357, 3363, 3369,
    3376, 3382, 3388, 3394, 3400, 3407, 3413, 3419, 3425, 3431, 3438, 3444, 3450, 3456, 3462, 3469,
    3475, 3481, 3487, 3493, 3500, 3506, 3512, 3518, 3524, 3531, 3537, 3543, 3549, 3555, 3562, 3568,
    3574, 3580, 3586, 3593, 3599, 3605, 3611, 3618, 3624, 3630, 3636, 3642, 3649, 3655, 3661, 3667,
    3673, 3680, 3686, 3692, 3698, 3704, 3711, 3717,
};
extern const uint16_t triangle_wave[600] = {
    0, 12, 25, 37, 50, 62, 74, 87, 99, 112, 124, 137, 149, 161, 174, 186,
    199, 211, 223, 236, 248, 261, 273, 285, 298, 310, 323, 335, 347, 360, 372, 385,
    397, 410, 422, 434, 447, 459, 472, 484, 496, 509, 521, 534, 546, 558, 571, 583,
    596, 608, 621, 633, 645, 658, 670, 683, 695, 707, 720, 732, 745, 757, 769, 782,
    794, 807, 819, 831, 844, 856, 869, 881, 894, 906, 918, 931, 943, 956, 968, 980,
    993, 1005, 1018, 1030, 1042, 1055, 1067, 1080, 1092, 1104, 1117, 1129, 1142, 1154, 1167, 1179,
    1191, 1204, 1216, 1229, 1241, 1253, 1266, 1278, 1291, 1303, 1315, 1328, 1340, 1353, 1365, 1378,
    1390, 1402, 1415, 1427, 1440, 1452, 1464, 1477, 1489, 1502, 1514, 1526, 1539, 1551, 1564, 1576,
    1588, 1601, 1613, 1626, 1638, 1651, 1663, 1675, 1688, 1700, 1713, 1725, 1737, 1750, 1762, 1775,
    1787, 1799, 1812, 1824, 1837, 1849, 1862, 1874, 1886, 1899, 1911, 1924, 1936, 1948, 1961, 1973,
    1986, 1998, 2010, 2023, 2035, 2048, 2060, 2072, 2085, 2097, 2110, 2122, 2135, 2147, 2159, 2172,
    2184, 2197, 2209, 2221, 2234, 2246, 2259, 2271, 2283, 2296, 2308, 2321, 2333, 2345, 2358, 2370,
    2383, 2395, 2408, 2420, 2432, 2445, 2457, 2470, 2482, 2494, 2507, 2519, 2532, 2544, 2556, 2569,
    2581, 2594, 2606, 2619, 2631, 2643, 2656, 2668, 2681, 2693, 2705, 2718, 2730, 2743, 2755, 2767,
    2780, 2792, 2805, 2817, 2829, 2842, 2854, 2867, 2879, 2892, 2904, 2916, 2929, 2941, 2954, 2966,
    2978, 2991, 3003, 3016, 3028, 3040, 3053, 3065, 3078, 3090, 3103, 3115, 3127, 3140, 3152, 3165,
    3177, 3189, 3202, 3214, 3227, 3239, 3251, 3264, 3276, 3289, 3301, 3313, 3326, 3338, 3351, 3363,
    3376, 3388, 3400, 3413, 3425, 3438, 3450, 3462, 3475, 3487, 3500, 3512, 3524, 3537, 3549, 3562,
    3574, 3586, 3599, 3611, 3624, 3636, 3649, 3661, 3673, 3686, 3698, 3711, 3723, 3711, 3698, 3686,
    3673, 3661, 3649, 3636, 3624, 3611, 3599, 3586, 3574, 3562, 3549, 3537, 3524, 3512, 3500, 3487,
    3475, 3462, 3450, 3438, 3425, 3413, 3400, 3388, 3376, 3363, 3351, 3338, 3326, 3313, 3301, 3289,
    3276, 3264, 3251, 3239, 3227, 3214, 3202, 3189, 3177, 3165, 3152, 3140, 3127, 3115, 3103, 3090,
    3078, 3065, 3053, 3040, 3028, 3016, 3003, 2991, 2978, 2966, 2954, 2941, 2929, 2916, 2904, 2892,
    2879, 2867, 2854, 2842, 2829, 2817, 2805, 2792, 2780, 2767, 2755, 2743, 2730, 2718, 2705, 2693,
    2681, 2668, 2656, 2643, 2631, 2619, 2606, 2594, 2581, 2569, 2556, 2544, 2532, 2519, 2507, 2494,
    2482, 2470, 2457, 2445, 2432, 2420, 2408, 2395, 2383, 2370, 2358, 2345, 2333, 2321, 2308, 2296,
    2283, 2271, 2259, 2246, 2234, 2221, 2209, 2197, 2184, 2172, 2159, 2147, 2135, 2122, 2110, 2097,
    2085, 2072, 2060, 2048, 2035, 2023, 2010, 1998, 1986, 1973, 1961, 1948, 1936, 1924, 1911, 1899,
    1886, 1874, 1862, 1849, 1837, 1824, 1812, 1799, 1787, 1775, 1762, 1750, 1737, 1725, 1713, 1700,
    1688, 1675, 1663, 1651, 1638, 1626, 1613, 1601, 1588, 1576, 1564, 1551, 1539, 1526, 1514, 1502,
    1489, 1477, 1464, 1452, 1440, 1427, 1415, 1402, 1390, 1378, 1365, 1353, 1340, 1328, 1315, 1303,
    1291, 1278, 1266, 1253, 1241, 1229, 1216, 1204, 1191, 1179, 1167, 1154, 1142, 1129, 1117, 1104,
    1092, 1080, 1067, 1055, 1042, 1030, 1018, 1005, 993, 980, 968, 956, 943, 931, 918, 906,
    894, 881, 869, 856, 844, 831, 819, 807, 794, 782, 769, 757, 745, 732, 720, 707,
    695, 683, 670, 658, 645, 633, 621, 608, 596, 583, 571, 558, 546, 534, 521, 509,
    496, 484, 472, 459, 447, 434, 422, 410, 397, 385, 372, 360, 347, 335, 323, 310,
    298, 285, 273, 261, 248, 236, 223, 211, 199, 186, 174, 161, 149, 137, 124, 112,
    99, 87, 74, 62, 50, 37, 25, 12,
};
External_DAC::External_DAC() {

}

External_DAC::~External_DAC() {
}

void External_DAC::DAC_init(void)
{
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOAEN;
    GPIOA->MODER &= ~(GPIO_MODER_MODE4 | GPIO_MODER_MODE5 | GPIO_MODER_MODE6 | GPIO_MODER_MODE7);
    GPIOA->MODER |= (GPIO_MODER_MODE4_1 | GPIO_MODER_MODE5_1 | GPIO_MODER_MODE6_1 | GPIO_MODER_MODE7_1);
    GPIOA->AFR[0] &= ~(GPIO_AFRL_AFSEL4 | GPIO_AFRL_AFSEL5 | GPIO_AFRL_AFSEL6 | GPIO_AFRL_AFSEL7);
    GPIOA->AFR[0] |= ((5 << GPIO_AFRL_AFSEL4_Pos) | (5 << GPIO_AFRL_AFSEL5_Pos) | (5 << GPIO_AFRL_AFSEL6_Pos) | (5 << GPIO_AFRL_AFSEL7_Pos));
    GPIOA->OTYPER &= ~(GPIO_OTYPER_OT4 | GPIO_OTYPER_OT5 | GPIO_OTYPER_OT6 | GPIO_OTYPER_OT7);
    GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPD4 | GPIO_PUPDR_PUPD5 | GPIO_PUPDR_PUPD6 | GPIO_PUPDR_PUPD7);
    RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
    SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1;  // Set prescaler to fPCLK/4
    SPI1->CR2 = SPI_CR2_SSOE | SPI_CR2_NSSP | (0xF << SPI_CR2_DS_Pos);
    SPI1->CR1 |= SPI_CR1_SPE;
}

// Convert a voltage value into a 12-bit value to control the DAC
uint16_t External_DAC::DAC_mvolt_convert(float mvoltage)
{
	return (mvoltage * 4095) / 3300;
}

void External_DAC::DAC_write(uint16_t value_A, uint16_t value_B)
//void External_DAC::DAC_write(uint16_t value_A)
{
    uint16_t spi_data_A = (value_A & 0x0FFF) | 0x3000;  // For DACA
    uint16_t spi_data_B = (value_B & 0x0FFF) | 0xB000;  // For DACB

    // Write to DACA
    while(!(SPI1->SR & SPI_SR_TXE));
    SPI1->DR = spi_data_A;

    // Write to DACB
    while(!(SPI1->SR & SPI_SR_TXE));
    SPI1->DR = spi_data_B;
}


/* Matlab script for generating lookup tables
% Parameters
fs = 256;  % Sampling frequency
t = 0:1/fs:1-1/fs;  % Time vector
Vref = 3.3;  % Reference voltage
bit_depth = 4095;  % 12-bit DAC
dc_offset = 1.5;  % DC offset in volts
Vpp = 3.0;  % Peak-to-peak voltage in volts

% Scaling factors
scale_factor = bit_depth / Vref;
dc_offset_scaled = round(dc_offset * scale_factor);
amplitude_scaled = round((Vpp / 2) * scale_factor);

% Generate Sine Wave
sine_wave = round(dc_offset_scaled + amplitude_scaled * sin(2 * pi * t));

% Generate Square Wave
square_wave = round(dc_offset_scaled + amplitude_scaled * (square(2 * pi * t) + 1) / 2);

% Generate Triangle Wave
triangle_wave = round(dc_offset_scaled + amplitude_scaled * (sawtooth(2 * pi * t, 0.5) + 1) / 2);

% Generate Sawtooth Wave
sawtooth_wave = round(dc_offset_scaled + amplitude_scaled * (sawtooth(2 * pi * t) + 1) / 2);

% Print Lookup Tables
print_lookup_table('sine_wave', sine_wave);
print_lookup_table('square_wave', square_wave);
print_lookup_table('sawtooth_wave', sawtooth_wave);
print_lookup_table('triangle_wave', triangle_wave);

% Function to print lookup table in 16x16 format
function print_lookup_table(name, data)
    fprintf('extern const uint16_t %s[%d] = {\n', name, length(data));
    for i = 1:16:length(data)
        fprintf('    ');
        fprintf('%d, ', data(i:min(i+15, end)));
        fprintf('\n');
    end
    fprintf('};\n');
end
 */




