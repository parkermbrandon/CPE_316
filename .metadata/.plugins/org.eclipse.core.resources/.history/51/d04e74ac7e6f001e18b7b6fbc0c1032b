#include "ExternalDAC.h"

extern const uint16_t sine_wave[200] = {
    1861, 1919, 1978, 2036, 2094, 2152, 2210, 2267, 2324, 2380, 2436, 2491, 2546, 2600, 2653, 2706,
    2758, 2808, 2858, 2907, 2955, 3002, 3047, 3092, 3135, 3177, 3218, 3257, 3295, 3331, 3367, 3400,
    3432, 3463, 3492, 3519, 3545, 3569, 3591, 3612, 3631, 3648, 3664, 3677, 3689, 3699, 3707, 3714,
    3718, 3721, 3722, 3721, 3718, 3714, 3707, 3699, 3689, 3677, 3664, 3648, 3631, 3612, 3591, 3569,
    3545, 3519, 3492, 3463, 3432, 3400, 3367, 3331, 3295, 3257, 3218, 3177, 3135, 3092, 3047, 3002,
    2955, 2907, 2858, 2808, 2758, 2706, 2653, 2600, 2546, 2491, 2436, 2380, 2324, 2267, 2210, 2152,
    2094, 2036, 1978, 1919, 1861, 1803, 1744, 1686, 1628, 1570, 1512, 1455, 1398, 1342, 1286, 1231,
    1176, 1122, 1069, 1016, 964, 914, 864, 815, 767, 720, 675, 630, 587, 545, 504, 465,
    427, 391, 355, 322, 290, 259, 230, 203, 177, 153, 131, 110, 91, 74, 58, 45,
    33, 23, 15, 8, 4, 1, 0, 1, 4, 8, 15, 23, 33, 45, 58, 74,
    91, 110, 131, 153, 177, 203, 230, 259, 290, 322, 355, 391, 427, 465, 504, 545,
    587, 630, 675, 720, 767, 815, 864, 914, 964, 1016, 1069, 1122, 1176, 1231, 1286, 1342,
    1398, 1455, 1512, 1570, 1628, 1686, 1744, 1803,
};
extern const uint16_t square_wave[200] = {
    3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
    3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
    3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
    3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
    3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
    3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722, 3722,
    3722, 3722, 3722, 3722, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
    1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
    1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
    1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
    1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
    1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
    1861, 1861, 1861, 1861, 1861, 1861, 1861, 1861,
};
extern const uint16_t sawtooth_wave[200] = {
    1861, 1870, 1880, 1889, 1898, 1908, 1917, 1926, 1935, 1945, 1954, 1963, 1973, 1982, 1991, 2001,
    2010, 2019, 2028, 2038, 2047, 2056, 2066, 2075, 2084, 2094, 2103, 2112, 2122, 2131, 2140, 2149,
    2159, 2168, 2177, 2187, 2196, 2205, 2215, 2224, 2233, 2243, 2252, 2261, 2270, 2280, 2289, 2298,
    2308, 2317, 2326, 2336, 2345, 2354, 2363, 2373, 2382, 2391, 2401, 2410, 2419, 2429, 2438, 2447,
    2457, 2466, 2475, 2484, 2494, 2503, 2512, 2522, 2531, 2540, 2550, 2559, 2568, 2577, 2587, 2596,
    2605, 2615, 2624, 2633, 2643, 2652, 2661, 2671, 2680, 2689, 2698, 2708, 2717, 2726, 2736, 2745,
    2754, 2764, 2773, 2782, 2792, 2801, 2810, 2819, 2829, 2838, 2847, 2857, 2866, 2875, 2885, 2894,
    2903, 2912, 2922, 2931, 2940, 2950, 2959, 2968, 2978, 2987, 2996, 3006, 3015, 3024, 3033, 3043,
    3052, 3061, 3071, 3080, 3089, 3099, 3108, 3117, 3126, 3136, 3145, 3154, 3164, 3173, 3182, 3192,
    3201, 3210, 3220, 3229, 3238, 3247, 3257, 3266, 3275, 3285, 3294, 3303, 3313, 3322, 3331, 3340,
    3350, 3359, 3368, 3378, 3387, 3396, 3406, 3415, 3424, 3434, 3443, 3452, 3461, 3471, 3480, 3489,
    3499, 3508, 3517, 3527, 3536, 3545, 3555, 3564, 3573, 3582, 3592, 3601, 3610, 3620, 3629, 3638,
    3648, 3657, 3666, 3675, 3685, 3694, 3703, 3713,
};
extern const uint16_t triangle_wave[200] = {
    1861, 1880, 1898, 1917, 1935, 1954, 1973, 1991, 2010, 2028, 2047, 2066, 2084, 2103, 2122, 2140,
    2159, 2177, 2196, 2215, 2233, 2252, 2270, 2289, 2308, 2326, 2345, 2363, 2382, 2401, 2419, 2438,
    2457, 2475, 2494, 2512, 2531, 2550, 2568, 2587, 2605, 2624, 2643, 2661, 2680, 2698, 2717, 2736,
    2754, 2773, 2792, 2810, 2829, 2847, 2866, 2885, 2903, 2922, 2940, 2959, 2978, 2996, 3015, 3033,
    3052, 3071, 3089, 3108, 3126, 3145, 3164, 3182, 3201, 3220, 3238, 3257, 3275, 3294, 3313, 3331,
    3350, 3368, 3387, 3406, 3424, 3443, 3461, 3480, 3499, 3517, 3536, 3555, 3573, 3592, 3610, 3629,
    3648, 3666, 3685, 3703, 3722, 3703, 3685, 3666, 3648, 3629, 3610, 3592, 3573, 3555, 3536, 3517,
    3499, 3480, 3461, 3443, 3424, 3406, 3387, 3368, 3350, 3331, 3313, 3294, 3275, 3257, 3238, 3220,
    3201, 3182, 3164, 3145, 3126, 3108, 3089, 3071, 3052, 3033, 3015, 2996, 2978, 2959, 2940, 2922,
    2903, 2885, 2866, 2847, 2829, 2810, 2792, 2773, 2754, 2736, 2717, 2698, 2680, 2661, 2643, 2624,
    2605, 2587, 2568, 2550, 2531, 2512, 2494, 2475, 2457, 2438, 2419, 2401, 2382, 2363, 2345, 2326,
    2308, 2289, 2270, 2252, 2233, 2215, 2196, 2177, 2159, 2140, 2122, 2103, 2084, 2066, 2047, 2028,
    2010, 1991, 1973, 1954, 1935, 1917, 1898, 1880,
};
External_DAC::External_DAC() {

}

External_DAC::~External_DAC() {
}

void External_DAC::DAC_init(void)
{
    RCC->AHB2ENR |= RCC_AHB2ENR_GPIOAEN;
    GPIOA->MODER &= ~(GPIO_MODER_MODE4 | GPIO_MODER_MODE5 | GPIO_MODER_MODE6 | GPIO_MODER_MODE7);
    GPIOA->MODER |= (GPIO_MODER_MODE4_1 | GPIO_MODER_MODE5_1 | GPIO_MODER_MODE6_1 | GPIO_MODER_MODE7_1);
    GPIOA->AFR[0] &= ~(GPIO_AFRL_AFSEL4 | GPIO_AFRL_AFSEL5 | GPIO_AFRL_AFSEL6 | GPIO_AFRL_AFSEL7);
    GPIOA->AFR[0] |= ((5 << GPIO_AFRL_AFSEL4_Pos) | (5 << GPIO_AFRL_AFSEL5_Pos) | (5 << GPIO_AFRL_AFSEL6_Pos) | (5 << GPIO_AFRL_AFSEL7_Pos));
    GPIOA->OTYPER &= ~(GPIO_OTYPER_OT4 | GPIO_OTYPER_OT5 | GPIO_OTYPER_OT6 | GPIO_OTYPER_OT7);
    GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPD4 | GPIO_PUPDR_PUPD5 | GPIO_PUPDR_PUPD6 | GPIO_PUPDR_PUPD7);
    RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
    SPI1->CR1 = SPI_CR1_MSTR | SPI_CR1_BR_1;  // Set prescaler to fPCLK/4
    SPI1->CR2 = SPI_CR2_SSOE | SPI_CR2_NSSP | (0xF << SPI_CR2_DS_Pos);
    SPI1->CR1 |= SPI_CR1_SPE;
}

// Convert a voltage value into a 12-bit value to control the DAC
uint16_t External_DAC::DAC_mvolt_convert(float mvoltage)
{
	return (mvoltage * 4095) / 3300;
}

void External_DAC::DAC_write(uint16_t value_A, uint16_t value_B)
//void External_DAC::DAC_write(uint16_t value_A)
{
    uint16_t spi_data_A = (value_A & 0x0FFF) | 0x3000;  // For DACA
    uint16_t spi_data_B = (value_B & 0x0FFF) | 0xB000;  // For DACB

    // Write to DACA
    while(!(SPI1->SR & SPI_SR_TXE));
    SPI1->DR = spi_data_A;

    // Write to DACB
    while(!(SPI1->SR & SPI_SR_TXE));
    SPI1->DR = spi_data_B;
}


/* Matlab script for generating lookup tables
% Parameters
fs = 256;  % Sampling frequency
t = 0:1/fs:1-1/fs;  % Time vector
Vref = 3.3;  % Reference voltage
bit_depth = 4095;  % 12-bit DAC
dc_offset = 1.5;  % DC offset in volts
Vpp = 3.0;  % Peak-to-peak voltage in volts

% Scaling factors
scale_factor = bit_depth / Vref;
dc_offset_scaled = round(dc_offset * scale_factor);
amplitude_scaled = round((Vpp / 2) * scale_factor);

% Generate Sine Wave
sine_wave = round(dc_offset_scaled + amplitude_scaled * sin(2 * pi * t));

% Generate Square Wave
square_wave = round(dc_offset_scaled + amplitude_scaled * (square(2 * pi * t) + 1) / 2);

% Generate Triangle Wave
triangle_wave = round(dc_offset_scaled + amplitude_scaled * (sawtooth(2 * pi * t, 0.5) + 1) / 2);

% Generate Sawtooth Wave
sawtooth_wave = round(dc_offset_scaled + amplitude_scaled * (sawtooth(2 * pi * t) + 1) / 2);

% Print Lookup Tables
print_lookup_table('sine_wave', sine_wave);
print_lookup_table('square_wave', square_wave);
print_lookup_table('sawtooth_wave', sawtooth_wave);
print_lookup_table('triangle_wave', triangle_wave);

% Function to print lookup table in 16x16 format
function print_lookup_table(name, data)
    fprintf('extern const uint16_t %s[%d] = {\n', name, length(data));
    for i = 1:16:length(data)
        fprintf('    ');
        fprintf('%d, ', data(i:min(i+15, end)));
        fprintf('\n');
    end
    fprintf('};\n');
end
 */




